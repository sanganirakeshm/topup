<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ServiceLocationDiscountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServiceLocationDiscountRepository extends EntityRepository
{
    public function getRemoveDiscountList($serviceLocationId,$NotInIds){
       
        $qb = $this->createQueryBuilder('sd')
        ->select('sd');
		
		if(!empty($NotInIds))
		{	
			// print_r($NotInIds);
        $qb->where('sd.id NOT IN(:Id)')
           ->setParameter('Id', $NotInIds);
		}		
        $qb->andWhere('sd.serviceLocation = :serviceLocation')
        ->setParameter('serviceLocation', $serviceLocationId);
    
        $delDiscount = $qb->getQuery()->getResult();
      // print_r($delDiscount);exit;
        if($delDiscount){
    
            return $delDiscount;
        }
    
        return false;
    }
	
	public function checkAmountRangeExists($serviceLocationId,$amount,$discountId,$discountUpdatedId) {
       
        $query = $this->createQueryBuilder('sd')
                ->select('count(sd.id)')
                ->where('sd.minAmount <= :amount')
                ->andWhere('sd.maxAmount >= :amount')
                ->setParameter('amount', $amount)
				->andWhere('sd.serviceLocation = :serviceLocation')
				->setParameter('serviceLocation', $serviceLocationId);
        
        if($discountId) {
            
			unset($discountUpdatedId[$discountId]);
			if(count($discountUpdatedId) > 0) {
			
				$query->andWhere('sd.id IN(:discountId)')->setParameter('discountId',  $discountUpdatedId);
			}
			//$query->andWhere('sd.id != :amtId')->setParameter('amtId',  $id);
        }
        
        $result = $query->getQuery()->getSingleScalarResult();
         
        return $result;    
    }
}
