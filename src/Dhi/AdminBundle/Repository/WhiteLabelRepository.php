<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * GlobalDiscountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WhiteLabelRepository extends EntityRepository
{
     public function getBannerGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper) {

        $data = $this->trim_serach_data($searchData, $SearchType);

        $query = $this->createQueryBuilder('wl')
                ->select('wl')
                ->where('wl.isDeleted = 0')
                ->orderBy('wl.id', 'desc');


        if ($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if ($likeStr) {

            $query->andWhere($likeStr);
        }

        $query->orderBy($orderBy, $sortOrder);

        $countQuery   = clone $query;
        $countQuery->select("count(wl.id) as totalRecords");
        $objCountData = $countQuery->getQuery()->getOneOrNullResult();
        $countData    = $objCountData['totalRecords'];

        $query->setMaxResults($limit);
        $query->setFirstResult($offset);

        $result = $query->getQuery()->getResult();

        $dataResult = array();

        if ($countData > 0) {

            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;

            return $dataResult;
        }
        return false;
    }

    public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();
         
        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {

                     if ($key == 'companyName' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'wl.companyName';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    
                     if ($key == 'domain' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'wl.domain';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    
                     if ($key == 'fromEmail' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'wl.fromEmail';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    
                    if ($key == 'Status' && !empty($val)) {
                         if($val=='InActive'){
                              $wlstatus = 0;
                         } else if($val=='Active') {
                             $wlstatus = 1;
                         }
                        $QueryStr[$i]['Field'] = 'wl.status';
                        $QueryStr[$i]['Value'] = $wlstatus;
                        $QueryStr[$i]['Operator'] = '=';
                    }

                    $i++;
                }
            } else {

            }
        }
        return $QueryStr;
    }
    
    public function getWhiteLabelSites($status = 'all'){
        $query = $this->createQueryBuilder('wl')
                ->select('wl.id','wl.companyName','wl.domain','wl.status')
                ->where('wl.isDeleted = :isDeleted')
                ->setParameter('isDeleted', false);
        if($status != 'all')
        {
        		$status = strlower($status);
            $statusType = array('active' => 1, 'inactive' => 0);
            $query->andWhere('wl.status = :status');
            $query->setParameter('status', $statusType[$status]);
        }
        $query->orderBy('wl.companyName', 'ASC');
        $result = $query->getQuery()->getArrayResult();
        return $result;
    }
    
    
    public function getallsites(){
        $query = $this->createQueryBuilder('wl')
            ->select('wl.id','wl.companyName','wl.domain','wl.status')
            ->where('wl.isDeleted = :isDeleted')
            ->setParameter('isDeleted', false);
        $query->orderBy('wl.companyName', 'ASC');
        $result = $query->getQuery()->getArrayResult();
        return $result;
                 
    }
      
    
    public function getallsitewithdomain(){
        $query = $this->createQueryBuilder('wl')
            ->select('wl.id','wl.companyName','wl.domain','wl.status')
            ->where('wl.isDeleted = :isDeleted')
            ->setParameter('isDeleted', false);
        $query->orderBy('wl.companyName', 'ASC');
        $result = $query->getQuery()->getArrayResult();
        $supportsites = array();
        if($result){
            foreach ($result as $resultRow) {
               $supportsites[] = $resultRow['companyName'].' - '.$resultRow['domain'];
            }
        }
        return $supportsites;
    }
    
}
