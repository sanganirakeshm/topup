<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\Mapping\OrderBy;
use Doctrine\ORM\EntityRepository;

/**
 * AradialPaymentHistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AradialPaymentHistoryRepository extends EntityRepository {

    public function getAradialPaymentHistoryGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper) {

        $data = $this->trim_serach_data($searchData, $SearchType);
		
        $query = $this->createQueryBuilder('a');
        
        if ($SearchType == 'ORLIKE') {
            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {
            $likeStr = $objHelper->andLikeSearch($data);
        }
        if ($likeStr) {
            $query->andWhere($likeStr);
        }
		
        $query->orderBy($orderBy, $sortOrder);
        $countData = count($query->getQuery()->getArrayResult());
        $query->setMaxResults($limit);
        $query->setFirstResult($offset);
        $result = $query->getQuery()->getResult();
        $dataResult = array();
        if ($countData > 0) {
            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;
           
            return $dataResult;
        }
        return false;
    }
    
     public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {
                    
                    if ($key == 'UserId') {
                        $QueryStr[$i]['Field'] = 'a.userId';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    
                    if($key == 'PaymentDate' && !empty($val)){
                        $RequestDate = explode('~', $val);
                        $ReqFrom = trim($RequestDate[0]);
                        $ReqTo = trim($RequestDate[1]);
                        
                        if(isset($RequestDate) && !empty($RequestDate)){
                            if($ReqFrom){
                                $ReqFrom = date('Y-m-d',strtotime($ReqFrom));
                                $QueryStr[$i]['Operator'] = 'RANGE';
                                $QueryStr[$i]['Condition'][0]['Field'] = 'a.paymentdate';
                                $QueryStr[$i]['Condition'][0]['Value'] = $ReqFrom;
                                $QueryStr[$i]['Condition'][0]['Operator'] = '>=';
                            }
                            if($ReqTo){
                                $ReqTo = date('Y-m-d 23:59:59',strtotime($ReqTo));
                                $QueryStr[$i]['Operator'] = 'RANGE';
                                $QueryStr[$i]['Condition'][1]['Field'] = 'a.paymentdate';
                                $QueryStr[$i]['Condition'][1]['Value'] = $ReqTo;
                                $QueryStr[$i]['Condition'][1]['Operator'] = '<=';
                            }
                        }
                    }
                    $i++;
                }
            } else {
                
            }
        }
        return $QueryStr;
    }
    
}