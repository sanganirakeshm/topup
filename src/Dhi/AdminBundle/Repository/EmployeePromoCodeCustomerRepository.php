<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DiscountCodeCustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EmployeePromoCodeCustomerRepository extends EntityRepository
{                   
    public function getEmployeePromoCodeCustomerGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper,$id) {

        $data = $this->trim_serach_data($searchData, $SearchType);

        $query = $this->createQueryBuilder('epcc')
                ->select('epcc')
				->leftJoin('epcc.EmployeePromoCodeId', 'epc')
				->leftJoin('epcc.user', 'u')
				->orderBy('epcc.id', 'desc')
				->where('epcc.EmployeePromoCodeId = :id')
				->setParameter('id', $id)
                ->andWhere('epcc.status = :status')
				->setParameter('status', 0);


        if ($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if ($likeStr) {

            $query->andWhere($likeStr);
        }
        $query->orderBy($orderBy, $sortOrder);

        $countData = count($query->getQuery()->getArrayResult());

        $query->setMaxResults($limit);
        $query->setFirstResult($offset);

        $result = $query->getQuery()->getResult();

        $dataResult = array();

        if ($countData > 0) {

            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;
            $dataResult['query'] = $query->getQuery()->getSQL();
            return $dataResult;
        }
        return false;
    }

	 public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {
                     if ($key == 'customer' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'u.username';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    $i++;
                }
            } else {

            }
        }
        return $QueryStr;
    }

    public function getRedeemtionCountByUsername($username){
        $query = $this->createQueryBuilder('epcc')
                ->select('epcc')
				->leftJoin('epcc.EmployeePromoCodeId', 'epc')
                ->where('epc.employeeName = :id')
				->setParameter('id', $username)
                ->andWhere('epcc.status = :status')
				->setParameter('status', 0);

         $result = count($query->getQuery()->getArrayResult());
         if($result){
             return $result;
         }else{
             return 0;
         }
    }
}