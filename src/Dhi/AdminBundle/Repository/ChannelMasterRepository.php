<?php

namespace Dhi\AdminBundle\Repository;
use Doctrine\ORM\Mapping\OrderBy;
use Doctrine\ORM\EntityRepository;

/**
 * ChannelMasterRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChannelMasterRepository extends EntityRepository {

	public function getChannelGridList($limit = 0, $offset = 10, $order_by = "cm.id", $sort_order = "asc", $searchData, $SearchType, $objHelper) {
		$data  = $this->trim_serach_data($searchData, $SearchType);
		$query = $this->createQueryBuilder('cm');
		$query->select('cm.id', 'cm.name', 'cm.image');
		
		if ($SearchType == 'ORLIKE') {
			$likeStr = $objHelper->orLikeSearch($data);
		}
		
		if ($SearchType == 'ANDLIKE') {
			$likeStr = $objHelper->andLikeSearch($data);
		}
		
		if ($likeStr) {
			$query->andWhere($likeStr);
		}

		$countQuery = clone $query;
		$countQuery->select("COUNT(cm.id) as totalRecords");
		$countData  = $countQuery->getQuery()->getSingleScalarResult();

		$query->orderBy($order_by, $sort_order);
		$query->setMaxResults($limit);
		$query->setFirstResult($offset);
		$result = $query->getQuery()->getArrayResult();
		$dataResult = array();
		if ($countData > 0) {
			$dataResult['result']      = $result;
			$dataResult['totalRecord'] = $countData;
			return $dataResult;
		}
		return false;
	}

	public function trim_serach_data($searchData, $SearchType) {
		$QueryStr = array();
		if (!empty($searchData)) {
			if ($SearchType == 'ANDLIKE') {
				$i = 0;
				foreach ($searchData as $key => $val) {
					if (($key == 'name') && !empty($val)) {
						$QueryStr[$i]['Field'] = 'cm.name';
						$QueryStr[$i]['Value'] = $val;
						$QueryStr[$i]['Operator'] = 'like';
					}
					$i++;
				}
			}
		}
		return $QueryStr;
	}

	public function getChannels(){
		$query = $this->createQueryBuilder('cm');
		$query->select('cm.name');
		$result = $query->getQuery()->getArrayResult();
		if (!empty($result)) {
			$allPackages = array_map(function($channel){ return $channel['name']; }, $result);
			return $allPackages;
		}else{
			return array();
		}
	}
        
        public function getChannelImage(){
            $query = $this->createQueryBuilder('cm');
            $query->select('cm.name', 'cm.image');
            $result = $query->getQuery()->getArrayResult();
            $allChannelImage = array();
            if (!empty($result)) {
                foreach ($result as $channel){
                    $allChannelImage[$channel['name']] = $channel['image'];
                }
            }
            return $allChannelImage;
	}
}