<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\Mapping\OrderBy;
use Doctrine\ORM\EntityRepository;

/**
 * PackageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionRepository extends EntityRepository {

	public function getGridList($limit = 0, $offset = 10, $order_by = "sp.id", $sort_order = "asc", $searchData, $SearchType, $objHelper, $user = "", $ipAddressZones = "") {
		$data = $this->trim_serach_data($searchData, $SearchType);

		$query = $this->createQueryBuilder('p');
		$query->select('p.id', 'p.startDate', 'p.endDate', 'p.amount', 'p.amountType', 'p.isActive');
		if ($SearchType == 'ORLIKE') {
			$likeStr = $objHelper->orLikeSearch($data);
		}
		if ($SearchType == 'ANDLIKE') {
			$likeStr = $objHelper->andLikeSearch($data);
		}
		if ($likeStr) {
			$query->andWhere($likeStr);
		}
		$query->orderBy($order_by, $sort_order);
		$countData = count($query->getQuery()->getArrayResult());
		$query->setMaxResults($limit);
		$query->setFirstResult($offset);
		$result = $query->getQuery()->getResult();
		$dataResult = array();
		if ($countData > 0) {
			$dataResult['result'] = $result;
			$dataResult['totalRecord'] = $countData;
			return $dataResult;
		}
		return false;
	}

	public function trim_serach_data($searchData, $SearchType) {
		$QueryStr = array();
		if (!empty($searchData)) {
			if ($SearchType == 'ANDLIKE') {
				$i = 0;
				foreach ($searchData as $key => $val) {
					if ($key == 'Status' && !empty($val)) {
						$status = array("Active" => true, "Inactive" => false);
						$QueryStr[$i]['Field'] = 'p.isActive';
						$QueryStr[$i]['Operator'] = '=';
						$QueryStr[$i]['Value'] = $status[$val];
					}
					$i++;
				}
			}
		}
		return $QueryStr;
	}

	public function getActiveCodeData($locationId){
        $currentDate = new \DateTime();
        $query = $this->createQueryBuilder('p')
        	->select('p','psl')
            ->innerJoin('p.serviceLocations','psl')
            ->andWhere('p.startDate < :startDate')
            ->setParameter('startDate', $currentDate->format('Y-m-d H:i:s').'%')
            ->andWhere('p.endDate > :endDate')
            ->setParameter('endDate', $currentDate->format('Y-m-d H:i:s').'%')
            ->andWhere('p.isActive = 1')
            ->andWhere('psl.id IN (:location)')
            ->setParameter('location', $locationId)
            ->groupBy('p.id');
        $result = $query->getQuery()->getArrayResult();
        return $result;
    }

    public function checkDateRange($startDate, $endDate, $id = 0){
        
        if (!empty($endDate) && !empty($startDate)) {
	        $query = $this->createQueryBuilder('p')
	            ->where(':endDate <= p.endDate AND :startDate >= p.startDate')
	            ->setParameter('endDate', $endDate->format('Y-m-d H:i:s'))
	            ->setParameter('startDate', $startDate->format('Y-m-d H:i:s'))
	            
	            ->orWhere(':c_endDate >= p.endDate AND :c_startDate <= p.startDate')
	            ->setParameter('c_endDate', $endDate->format('Y-m-d H:i:s'))
	            ->setParameter('c_startDate', $startDate->format('Y-m-d H:i:s'))
	            
	            ->orWhere(':a_g_endDate <= p.endDate AND :a_l_startDate <= p.startDate AND :a_g_g_endDate >= p.startDate')
	            ->setParameter('a_g_endDate', $endDate->format('Y-m-d H:i:s'))
	            ->setParameter('a_l_startDate', $startDate->format('Y-m-d H:i:s'))
	            ->setParameter('a_g_g_endDate', $endDate->format('Y-m-d H:i:s'))

	            ->orWhere(':b_l_endDate >= p.endDate AND :b_l_l_startDate >= p.startDate AND :b_l_startDate <= p.endDate')
	            ->setParameter('b_l_endDate', $endDate->format('Y-m-d H:i:s'))
	            ->setParameter('b_l_l_startDate', $startDate->format('Y-m-d H:i:s'))
	            ->setParameter('b_l_startDate', $startDate->format('Y-m-d H:i:s'))
	            ->groupBy('p.id');

	        if ($id > 0) {
	        	$query->andWhere("p.id != :id")->setParameter('id', $id);
	        }

	        $result = $query->getQuery()->getArrayResult();
	        return $result;
        }
    }
}
