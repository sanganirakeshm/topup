<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TopupLinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TopupLinkRepository extends EntityRepository {

    public function getTopupLinkGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper) {
        
        $data = $this->trim_serach_data($searchData, $SearchType);

        $query = $this->createQueryBuilder('t');

        if ($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if ($likeStr) {

            $query->andWhere($likeStr);
        }

        $query->orderBy($orderBy, $sortOrder);
        
        $countData = count($query->getQuery()->getArrayResult());
        
        $query->setMaxResults($limit);
        $query->setFirstResult($offset);

        $result = $query->getQuery()->getResult();

        $dataResult = array();

        if ($countData > 0) {

            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;

            return $dataResult;
        }
        return false;
    }

    public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {

                    if ($key == 'Name' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 's.name';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    $i++;
                }
            } else {
                
            }
        }
        return $QueryStr;
    }
    
    public function checkLinkAvailableForUser($userSerLoc){
        
        $query = $this->createQueryBuilder('tl')
                ->leftJoin('tl.serviceLocations', 'sl')
                ->where('tl.status = :status')
                ->andWhere('sl.name = :serLoc')
                ->setParameter('status', 1)
                ->setParameter('serLoc', $userSerLoc);
        
        $result = $query->getQuery()->getResult();
        
        if(count($result) > 0){
            return $result;
        }
        return false;
    }
}
