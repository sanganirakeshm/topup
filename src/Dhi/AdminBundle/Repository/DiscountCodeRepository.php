<?php

namespace Dhi\AdminBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DiscountCodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DiscountCodeRepository extends EntityRepository {

    public function getDiscountCodeGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper, $serviceLocation = '') {

        $data = $this->trim_serach_data($searchData, $SearchType);

        $query = $this->createQueryBuilder('dc')
                ->select('dc')
                ->leftJoin('DhiAdminBundle:DiscountCodeServiceLocation', 'dcsl','with','dc.id = dcsl.discountCodeId')
                ->leftJoin('dcsl.serviceLocation', 'sl')
                ->orderBy('dc.id', 'desc')
                ->groupBy('dc.id');

        if($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if($likeStr) {

            $query->andWhere($likeStr);
        }
        //echo $searchParam['service'];


        if($serviceLocation!= '')
        { 
            $query->andWhere('sl.id IN (:serviceLocation)');
            $query->setParameter('serviceLocation', $serviceLocation);
        }
        $query->orderBy($orderBy, $sortOrder);

        $countData = count($query->getQuery()->getArrayResult());

        $query->setMaxResults($limit);
        $query->setFirstResult($offset);


        $result = $query->getQuery()->getResult();

        $dataResult = array();

        if($countData > 0) {

            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;

            return $dataResult;
        }
        return false;
    }

    public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if(!empty($searchData)) {

            if($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {

                    if($key == 'Services' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 's.name';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }

                    if($key == 'DiscountCode' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'dc.discountCode';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }

                    if($key == 'ServiceLocation' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'sl.name';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    if($key == 'CreatedBy' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'dc.createdBy';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }

                    $i++;
                }
            } else {

            }
        }
        return $QueryStr;
    }

    public function checkPromoCodeExist($id) {



        $query = $this->createQueryBuilder('dc')
                ->select('dc')
//                ->where('dc.status = :status')
//                ->setParameter('status', 1)

                ->orderBy('dc.id', 'desc')
                ->groupBy('dc.id');

        if($id) {

            $query->andwhere('dc.id NOT IN(:Id)')
                    ->setParameter('Id', $id);
        }

        $result = $query->getQuery()->getArrayResult();


        return $result;
    }

    public function getPdfDiscountData($searchData, $adminServiceLocationPermission = '') {

        $query = $this->createQueryBuilder('dc')
            ->select('dc')
            ->leftJoin('DhiAdminBundle:DiscountCodeServiceLocation', 'dcsl','with','dc.id = dcsl.discountCodeId')
            ->leftJoin('dcsl.serviceLocation', 'sl')
            ->orderBy('dc.id', 'desc')
            ->groupBy('dc.id');

        if(!empty($searchData['DiscountCode'])) {
            $query->andwhere('dc.discountCode LIKE :pmname')
                    ->setParameter('pmname','%' . $searchData['DiscountCode'] . '%');
        }

        if(!empty($searchData['CreatedBy'])) {
            $query->andwhere('dc.createdBy LIKE :uname')
                    ->setParameter('uname', '%' . $searchData['CreatedBy'] . '%');
        }
        
        if(!empty($searchData['ServiceLocation'])) {
           $query->andwhere('sl.name = :slname')
                   ->setParameter('slname', $searchData['ServiceLocation']);
        }
        
        if(!empty($adminServiceLocationPermission))
        { 
            $query->andWhere('sl.id IN (:adminServiceLocationPermission)');
            $query->setParameter('adminServiceLocationPermission', $adminServiceLocationPermission);
        }

        $result = $query->getQuery()->getResult();
        return $result;
    }

    public function getServicePromoData($promocode) {

        $query = $this->createQueryBuilder('pc')
                ->select('pc')
                ->leftJoin('pc.service', 's')
                ->leftJoin('pc.users', 'u')
                ->leftJoin('pc.serviceLocations', 'sl')
                ->orderBy('pc.id', 'desc')
                ->groupBy('pc.id');

        if(!empty($promocode)) {
            $query->andwhere('pc.promoCode = :pmname')
                    ->setParameter('pmname', $promocode);
        }


        $result = $query->getQuery()->getResult();




        return $result;
    }
    public function getActiveCodeData($countryId){
        $currentDate = new \DateTime();
        $query = $this->createQueryBuilder('dc')
            ->leftJoin('DhiAdminBundle:DiscountCodeServiceLocation','dcsl','with','dcsl.discountCodeId = dc.id')
            ->andWhere('dc.startDate <= :onlydate')
            ->setParameter('onlydate', $currentDate->format('Y-m-d').'%')
                ->andWhere('dc.endDate >= :onlydate')
            ->setParameter('onlydate', $currentDate->format('Y-m-d').'%')
            ->andWhere('dc.endDate >= \''.$currentDate->format('Y-m-d 23:59:59').'\'')
            ->andWhere('dc.status = 1')
            ->andWhere('dcsl.serviceLocation IN ('.$countryId.')')
            ->groupBy('dc.id');
        $result = $query->getQuery()->getArrayResult();
        return $result;
    }
}
