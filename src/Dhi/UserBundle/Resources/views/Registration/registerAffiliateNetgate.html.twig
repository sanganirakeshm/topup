{#{% extends "DhiUserBundle::layout.html.twig" %}#}
{% extends "DhiUserBundle::layout.html.twig" %}
{% form_theme form 'DhiUserBundle::captcha.html.twig' %}
{% block body %}
{% block fos_user_content %}

{% trans_default_domain 'FOSUserBundle' %}
<section class="signup signin3rdParty signup3rdParty">
	<div class="container-fluid">
		<div class="row">
			<div class="signupForm col-lg-6 col-md-6 col-sm-10 col-xs-12">
				<h2>Sign Up</h2>
				<h4>Sign up once. Choose the services you want!  TV I Movies I Internet I Cellular I More!</h4>

				<form action="{{ path('fos_user_registration_register') }}" {{ form_enctype(form) }} method="POST" class="fos_user_registration_register" id="fos_user_registration_register" novalidate>
				    <div class="signupFormLeft">
                        <div class="row">
                            <div class="msgBoxContainer">
                                <div class="col-xs-12" id="flash">{% include "DhiUserBundle::flashMessage.html.twig" %}</div>
                            </div>
                        </div>
						<h6>Create an account &nbsp; <a href="{{ url('fos_user_security_login') }}">Already have an account?</a></h6>
						<div class="form-group full-width">
							{{ form_widget(form.username, { 'attr': {'class': 'form-control', 'placeholder': 'Username'}}) }}
													{#<div id="ajaxUsernameMsg"></div>#}
													<div id="ajaxUsernameMsg"></div>
													<div class="serverError">{% if form_errors(form.username) %}{{ form_errors(form.username) }}{% endif %}</div>
						</div>
						<div class="form-group half-width">
                                                    {% set emailVal = '' %}
                                                    {% if email is defined %}
                                                        {% set emailVal = email %}
                                                    {% endif%}
                                                    {{ form_widget(form.email.first, { 'attr': {'class': 'form-control', 'placeholder': 'Email address', 'value': emailVal}}) }}
													{#<div id="ajaxEmailMsg"></div>#}
													<div id="ajaxEmailMsg"></div>
													<div class="serverError">{% if form_errors(form.email.first) %}{{ form_errors(form.email.first) }}{% endif %}</div>
											</div>
						<div class="form-group half-width">
							{{ form_widget(form.email.second, { 'attr': {'class': 'form-control', 'placeholder': 'Confirm email address'}}) }}
													<div class="serverError">{% if form_errors(form.email.second) %}{{ form_errors(form.email.second) }}{% endif %}</div>
						</div>
											<div class="full-width"></div>
						<div class="form-group half-width">
							{{ form_widget(form.plainPassword.first, { 'attr': {'class': 'form-control', 'placeholder': 'Password'}}) }}
							<div class="serverError">{% if form_errors(form.plainPassword.first) %}{{ form_errors(form.plainPassword.first) }}{% endif %}</div>

											</div>
						<div class="form-group half-width">
							{{ form_widget(form.plainPassword.second, { 'attr': {'class': 'form-control', 'placeholder': 'Confirm password'}}) }}
							<div class="serverError">{% if form_errors(form.plainPassword.second) %}{{ form_errors(form.plainPassword.second) }}{% endif %}</div>
						</div>
						<div class="form-group half-width clearfix">
							{{ form_widget(form.firstname, { 'attr': {'class': 'form-control', 'data-prompt-position': 'topRight', 'placeholder': 'First name'}}) }}
							<div class="serverError">{% if form_errors(form.firstname) %}{{ form_errors(form.firstname) }}{% endif %}</div>
						</div>
						<div class="form-group half-width">
							{{ form_widget(form.lastname, { 'attr': {'class': 'form-control', 'placeholder': 'Last name'}}) }}
							<div class="serverError">{% if form_errors(form.lastname) %}{{ form_errors(form.lastname) }}{% endif %}</div>
						</div>
						<div class="form-group half-width clearfix">
							{{ form_widget(form.address, { 'attr': {'class': 'form-control', 'placeholder': 'Address'}}) }}
							<div class="serverError">{% if form_errors(form.address) %}{{ form_errors(form.address) }}{% endif %}</div>
						</div>
						<div class="form-group half-width">
							{{ form_widget(form.city, { 'attr': {'class': 'form-control', 'placeholder': 'City'}}) }}
							<div class="serverError">{% if form_errors(form.city) %}{{ form_errors(form.city) }}{% endif %}</div>
						</div>
						<div class="form-group half-width clearfix">
							{{ form_widget(form.state, { 'attr': {'class': 'form-control', 'placeholder': 'State'}}) }}
							<div class="serverError">{% if form_errors(form.state) %}{{ form_errors(form.state) }}{% endif %}</div>
						</div>
						<div class="form-group half-width">
							{{ form_widget(form.zip, { 'attr': {'class': 'form-control', 'placeholder': 'Zip code'}}) }}
							<div class="serverError">{% if form_errors(form.zip) %}{{ form_errors(form.zip) }}{% endif %}</div>
						</div>

						<div class="pull-left half-width clearfix">
							<div class="form-group full-width-in">
								{{ form_widget(form.country, { 'attr': {'class': 'form-control', 'placeholder': 'Country'}}) }}
								<div class="serverError">{% if form_errors(form.country) %}{{ form_errors(form.country) }}{% endif %}</div>
							</div>
							{% if (app.environment != 'test') %}
							<div class="form-group full-width-in no-margin">
								{{ form_widget(form.captcha) }}
							</div>
							<li class="captcha_3">
								<div class="serverError">{% if form_errors(form.captcha) %}{{ form_errors(form.captcha) }}{% endif %}</div>
							</li>
							{% endif %}
						</div>

						{% if (app.environment != 'test') %}
						<div class="pull-right full-width register_box">
							<div class="form-group full-width-in">
								<div class="checkbox">
									<label>{{ form_widget(form.terms) }} By signing up, I agree to the <a href="javascript:void(0)" data-toggle="modal" data-target="#termCondition">Terms of Service</a>{{ form_widget(form.terms, { 'attr': {'class': 'pull-left', 'data-prompt-position': 'topRight'} }) }}.</label>
									<div class="serverError">{% if form_errors(form.terms) %}{{ form_errors(form.terms) }}{% endif %}</div>
								</div>
							</div>

							<div class="form-group full-width-in">
	{#					  		<button type="submit" class="btn btn-success full-width-in" onclick="$('.serverError').empty();" >{{ 'registration.submit'|trans }}</button>#}
	{#					  		<button type="submit" class="btn btn-success full-width-in" onclick="$('.serverError').contents().unwrap();" >{{ 'registration.submit'|trans }}</button>#}
                                <input type="hidden" name="affiliate" value="netgate" />
								<button type="submit" class="btn btn-success full-width-in" >{{ 'registration.submit'|trans }}</button>
							</div>
						</div>
						{% endif %}
                                        <input type="hidden" name="hdnEmail" id="hdnEmail" value="{{app.request.get('email')}}"> 
                                        <input type="hidden" name="hdnToken" id="hdnToken" value="{{app.request.get('token')}}"> 
					{{ form_rest(form) }}
					</div>
				</form>
			</div>
			<div class="col-xs-12 col-sm-2 col-md-6"></div>
		</div>
	</div>
</section>

{% endblock fos_user_content %}
{% endblock body %}
{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">

        var isValidUser = true;

        $(document).ready(function () {

            $.validator.addMethod("regex", function(value, element, regexpr) {
                return regexpr.test(value);
            }, "Your username can contain characters, numbers and these special characters only - _ ! @ . / $.");

            jQuery.validator.addMethod("regexTestUser", function(value, element) {
                isValidUserName = true;
                regexpr_username = /^tji\/|^bsm\//i;
                if (regexpr_username.test(value)) {
                    isValidUserName = false;
                    $("#ajaxUsernameMsg").html('');
                }
                return isValidUserName;
            }, "Invalid username");
            
            $.validator.addMethod("regex_name", function(value, element, regexpr) {
                return regexpr.test(value);
            }, "Your name contain characters, numbers and these special character only - _");

            $.validator.addMethod("regex_valid_char", function(value, element, regexpr) {
                return regexpr.test(value);
            }, "Please enter valid email.");

            $("#fos_user_registration_register").submit(function() {

            if ($(this).valid()) {

                checkEmailSource = '{{ path('dhi_user_check_valid_username') }}';
                var responseUsername = checkUsername($('#fos_user_registration_form_username').val());
                var responseEmail = checkEmail($('#fos_user_registration_form_email_first').val(), 'registration');

                if(responseEmail && responseUsername) {

                    return true;

                } else {
                    // $("#ajaxEmailMsg").addClass("error1").removeClass("success1").removeClass("success").html("Please enter valid email.").show();
                    return false;

                }

            } else {

                $("#ajaxUsernameMsg").html('');
                $("#ajaxEmailMsg").html('');
                //$(".serverError").html('');
            }
            }).validate({

                rules: {
                    "fos_user_registration_form[username]": {
                        "required": true,
                        "regex": /^[A-Za-z0-9-_!@./$]+$/,
                        "minlength": 6,
                        "maxlength": 32,
                        "regexTestUser":true
                    },
                    "fos_user_registration_form[email][first]": {
                        "required": true,
                        "regex_valid_char": /^[^'"#]*$/,
                        "email": true
                    },
                    "fos_user_registration_form[email][second]": {
                        "required": true,
                        "regex_valid_char": /^[^'"#]*$/,
                        "equalTo": "#fos_user_registration_form_email_first"
                    },
                    "fos_user_registration_form[plainPassword][first]": {
                        "required": true,
                        "regex": /^[A-Za-z0-9!@#$_]+$/,
                        "minlength": 8,
                        "maxlength": 18,
                    },
                    "fos_user_registration_form[plainPassword][second]": {
                        "required": true,
                        "equalTo": "#fos_user_registration_form_plainPassword_first"
                    },
                    "fos_user_registration_form[firstname]": {
                        "required": true,
                        "regex_name": /^[A-Za-z0-9 _-]+$/
                    },
                    "fos_user_registration_form[lastname]": {
                        "required": true,
                        "regex_name": /^[A-Za-z0-9 _-]+$/
                    },
                    "fos_user_registration_form[address]": "required",
                    "fos_user_registration_form[city]": "required",
                    "fos_user_registration_form[state]": "required",
                    "fos_user_registration_form[zip]": {
                        "required": true,
                        "minlength": 5,
                    },
                    "fos_user_registration_form[country]": "required",
                    "fos_user_registration_form[captcha]": "required",
                    "fos_user_registration_form[terms]": "required"
                },
                messages: {
                    "fos_user_registration_form[username]": {
                        "required": "Please enter username.",
                        "minlength": "Your username must have minimum 6 characters.",
                        "maxlength": "Your username can have maximum 32 characters.",
                        "regex": "Your username can contain characters, numbers and these special characters only - _ ! @ . / $.",
                        "regexTestUser" : "Invalid username"
                    },
                    "fos_user_registration_form[email][first]": {
                        "required": "Please enter email address.",
                        "email": "Please enter valid email."
                    },
                    "fos_user_registration_form[email][second]": {
                        "required": "Please enter confirm email address.",
                        "email": "Please enter valid email.",
                        "equalTo" : "Email and confirm email do not match."
                    },
                    "fos_user_registration_form[plainPassword][first]": {
                        "required": "Please enter password.",
                        "minlength": "Your password must have minimum 8 characters.",
                        "maxlength": "Your password can have maximum 18 characters.",
                        "regex": "Your current password contains invalid characters. Passwords can contain characters, numbers and only these special characters: ! @ # $"
                    },
                    "fos_user_registration_form[plainPassword][second]": {
                        "required": "Please enter confirm password.",
                        "equalTo": "Password does not match the confirm password."
                    },
                    "fos_user_registration_form[firstname]": {
                        "required": "Please enter first name.",
                        "regex_name": "Your first name contain characters, numbers and these special characters only - _"
                    },
                    "fos_user_registration_form[lastname]": {
                        "required": "Please enter last name.",
                        "regex_name": "Your last name contain characters, numbers and these special characters only - _"
                    },
                    "fos_user_registration_form[address]": "Please enter address.",
                    "fos_user_registration_form[city]": "Please enter city.",
                    "fos_user_registration_form[state]": "Please enter state.",
                    "fos_user_registration_form[zip]": {
                        "required": "Please enter zip code.",
                        "minlength": "Your zip must have minimum 5 characters.",
                    },
                    "fos_user_registration_form[country]": "Please enter country.",
                    "fos_user_registration_form[captcha]": "Please type characters in the image.",
                    "fos_user_registration_form[terms]": "Please agree to terms of service."
                },

                onkeyup: function(element) {

                    if($("#fos_user_registration_form_email_first").val() == "")
                    {
                        $("#ajaxEmailMsg").html('');
                    }

                    if($("#fos_user_registration_form_username").val() == "") {

                        $("#ajaxUsernameMsg").html('');
                    }

                },
                errorPlacement: function (error, element) {
                    if (element.attr("id") == "fos_user_registration_form_username") {
                        if(error.text()!='') {

                            $("#ajaxUsernameMsg").html('');
                        }
                        error.insertAfter(element);
                    } else {
                        error.insertAfter(element);
                    }

                }
            });

             // check email is exists or not
         // $("#fos_user_registration_form_email_first").change(function (event) {
       $("#fos_user_registration_form_email_first").blur(function (event) {

                checkEmailSource = '{{ path('dhi_user_check_valid_username') }}';

                if($("#fos_user_registration_form_email_first").val() == "")
                {
                    $("#ajaxEmailMsg").html('');
					return false;
                }
                //checkEmail($(this).val(), 'registration');
                var isEmailValid = checkEmail($(this).val(), 'registration');
                
                if(!isEmailValid && $("#fos_user_registration_form_email_first").val() != ""){
                    
                    //$("#ajaxEmailMsg").addClass("error1").removeClass("success1").removeClass("success").html("Please enter valid email.").show();
                   //$("#ajaxEmailMsg").addClass("error1").removeClass("success1").removeClass("success").html("Email already used.").show();
                    $("#fos_user_registration_form_email_first-error").html("").hide();
                    
                }
        });

            $("#fos_user_registration_form_email_first").keyup(function (event) {

                if($("#fos_user_registration_form_email_first").val() == "")
                {
                    $("#ajaxEmailMsg").html('');
                }

            });

            $("#fos_user_registration_form_username").change(function (event) {

                checkEmailSource = '{{ path('dhi_user_check_valid_username') }}';
                regexpr_username = /^[A-Za-z0-9-_!@./$]+$/;

                if(checkIsValidUserName() && regexpr_username.test($(this).val()))
                {
                    isValidUser = checkUsername($(this).val());
                }else{
                    $("#ajaxUsernameMsg").html('');
                }

            });

            $("#fos_user_registration_form_country").change(function() {

                var countryId = $('#fos_user_registration_form_country').val();
                $.ajax({
                    type: "POST",
                    url: "{{ path('dhi_user_get_state') }}",
                    data: {countryId:countryId, source: 'registration'},
                    beforeSend: function( xhr ) {
                        $('#ajax-loader-bx').show();
                    },
                    success:function(result){

                        $('#fos_user_registration_form_state').empty();
                        var s= document.getElementById('fos_user_registration_form_state');
                        s.options[0]= new Option('Select State', '');
                        $.each(result,function(key,value){
                            $("#fos_user_registration_form_state").append('<option value="' + key + '">'  +   value + '</option>');
                        });

                        $('#ajax-loader-bx').hide();
                    }
                });
            }).change();
        });

        //check at client site username is valid or not
        function checkIsValidUserName() {

            isValidUserName = true;

            if($("#fos_user_registration_form_username").val() == "" || $("#fos_user_registration_form_username").val().length > 32 || $("#fos_user_registration_form_username").val().length < 6){
               $("#ajaxUsernameMsg").html('');
               isValidUserName = false;
            }
            return isValidUserName;
        }

    </script>

{% endblock javascripts %}
