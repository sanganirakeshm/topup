<?php

namespace Dhi\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PromoCodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromoCustomerRepository extends EntityRepository
{
	  public function getPromoCodeCustomerGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper,$id) {

        $data = $this->trim_serach_data($searchData, $SearchType);

        $query = $this->createQueryBuilder('pcc')
                ->select('pcc')
				->leftJoin('pcc.promoCodeId', 'pc')
				->leftJoin('pcc.user', 'u')
				->orderBy('pcc.id', 'desc')
				->where('pcc.promoCodeId = :id')
				->setParameter('id', $id);
				

        if ($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if ($likeStr) {

            $query->andWhere($likeStr);
        }
		//echo $searchParam['service'];


        $query->orderBy($orderBy, $sortOrder);

        $countData = count($query->getQuery()->getArrayResult());

        $query->setMaxResults($limit);
        $query->setFirstResult($offset);

//		echo "<pre>";
//		print_r($query->getQuery()->getSQL());
//		exit;


        $result = $query->getQuery()->getResult();
		
        $dataResult = array();

        if ($countData > 0) {

            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;

            return $dataResult;
        }
        return false;
    }

	 public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {

                     if ($key == 'customer' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'u.firstname';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
//
//                    if ($key == 'PromoCode' && !empty($val)) {
//
//                        $QueryStr[$i]['Field'] = 'pc.promoCode';
//                        $QueryStr[$i]['Value'] = $val ;
//                        $QueryStr[$i]['Operator'] = 'LIKE';
//                    }
//
//                     if ($key == 'ServiceLocation' && !empty($val)) {
//
//                        $QueryStr[$i]['Field'] = 'sl.name';
//                        $QueryStr[$i]['Value'] = $val;
//                        $QueryStr[$i]['Operator'] = 'LIKE';
//                    }
//                     if ($key == 'CreatedBy' && !empty($val)) {
//
//                        $QueryStr[$i]['Field'] = 'pc.createdBy';
//                        $QueryStr[$i]['Value'] = $val;
//                        $QueryStr[$i]['Operator'] = 'LIKE';
//                    }

                    $i++;
                }
            } else {

            }
        }
        return $QueryStr;
    }

	public function getCustomerCount($user,$objPromoCode) {

		 $query = $this->createQueryBuilder('pcc')
                ->select('MAX(pcc.promoCount)')
				->leftJoin('pcc.promoCodeId', 'pc')
				->leftJoin('pcc.user', 'u')
				->orderBy('pcc.id', 'desc')
				->where('pcc.user = :user')
				->setParameter('user', $user)
				->andWhere('pcc.promoCodeId = :promoCodeId')
				->setParameter('promoCodeId', $objPromoCode);

		 $result = $query->getQuery()->getArrayResult();

		 return $result;
	}
	


}