<?php

namespace Dhi\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * GroupRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends EntityRepository
{
	public function getAllGroup() {
		
		$query = $this->createQueryBuilder('g');
		
		return $query;
	}
	
	public function getGroupByAdmin($name) {
	    $query = $this->getAllGroup();
// 	    echo $name;exit;
	    if($name == 'Super Admin') {
	        
	    }
	    elseif($name == 'Manager') {
	       
	        $query->where('g.name != :group')
	        ->setParameter('group', 'Super Admin');
	    } else {
	       
	        $query->where('g.name = :group')
	        ->setParameter('group', $name);
	    }
           
	    
	    return $query;
	}
	
        public function getGroupGridList($limit = 0, $offset = 10, $orderBy = "id", $sortOrder = "asc", $searchData, $SearchType, $objHelper) {
        
        $data = $this->trim_serach_data($searchData, $SearchType);
        
        $query = $this->createQueryBuilder('g');                 

        if ($SearchType == 'ORLIKE') {

            $likeStr = $objHelper->orLikeSearch($data);
        }
        if ($SearchType == 'ANDLIKE') {

            $likeStr = $objHelper->andLikeSearch($data);
        }

        if ($likeStr) {

            $query->andWhere($likeStr);
        }

        $query->orderBy($orderBy, $sortOrder);
       
        $countData = count($query->getQuery()->getArrayResult());
           
        $query->setMaxResults($limit);
        $query->setFirstResult($offset);
       
        $result = $query->getQuery()->getResult();
        
        $dataResult = array();
       
        if ($countData > 0) {
            
            $dataResult['result'] = $result;
            $dataResult['totalRecord'] = $countData;
           
            return $dataResult;
        }
        return false;
    }
    
     public function trim_serach_data($searchData, $SearchType) {

        $QueryStr = array();

        if (!empty($searchData)) {

            if ($SearchType == 'ANDLIKE') {

                $i = 0;
                foreach ($searchData as $key => $val) {
                    
                     if ($key == 'Name' && !empty($val)) {

                        $QueryStr[$i]['Field'] = 'g.name';
                        $QueryStr[$i]['Value'] = $val;
                        $QueryStr[$i]['Operator'] = 'LIKE';
                    }
                    
                    $i++;
                }
            } else {
                
            }
        }
        return $QueryStr;
    }
}
