<?php

namespace Dhi\UserBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ContactUsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SupportRepository extends EntityRepository {

    public function getAllSupports() {
        
        $qb = $this->createQueryBuilder('s')
                ->select('s')
                ->leftJoin('s.supportCategory', 'sc')
                ->leftJoin('s.user', 'u')
                ->orderBy('s.id', 'desc');
        
        return $qb;
    }
    
    public function getAllSupportsSearch($query, $searchParam) {
    
        if (isset($searchParam['id']) && !empty($searchParam['id'])) {

            if (strpos($searchParam['id'], 'EV') !== false) {
                
                $id = substr($searchParam['id'], '2');
            } else {
                
                $id = $searchParam['id'];
            }

            $query->andWhere('s.id LIKE :id')
                    ->setParameter('id', '%'. $id . '%');
        }
        
        if (isset($searchParam['category']) && !empty($searchParam['category'])) {
            
            $query->andWhere('sc.name = :category')
                    ->setParameter('category', $searchParam['category']);
        }

        if (isset($searchParam['email']) && !empty($searchParam['email'])) {
            
            $query->andWhere('s.email LIKE :email')
                    ->setParameter('email', '%'. trim($searchParam['email']) . '%');
        }

        if (isset($searchParam['fromDate']) && !empty($searchParam['fromDate'])) {
            
//            $query->andWhere('date_diff(s.createdAt, :date) = 0')
//                  ->setParameter("date", date('Y-m-d', strtotime(str_replace('-', '/', $searchParam['date']))));
            
            $startDate = new \DateTime($searchParam['fromDate']);

            $query->andWhere('s.createdAt >= :startDate')
                  ->setParameter("startDate", $startDate->format('Y-m-d 00:00:00'));
        }
        
        if (isset($searchParam['toDate']) && !empty($searchParam['toDate'])) {
            
//            $query->andWhere('date_diff(s.createdAt, :date) = 0')
//                  ->setParameter("date", date('Y-m-d', strtotime(str_replace('-', '/', $searchParam['date']))));
            
            $endDate = new \DateTime($searchParam['toDate']);

            $query->andWhere('s.createdAt <= :endDate')
                  ->setParameter("endDate", $endDate->format('Y-m-d 23:59:59'));
        }
        
        if (isset($searchParam['status']) && !empty($searchParam['status'])) {
            
            $query->andWhere('s.status = :status')
                    ->setParameter('status', $searchParam['status']);
        }
        
        if (isset($searchParam['emailStatus']) && !empty($searchParam['emailStatus'])) {
            
            $query->andWhere('s.emailStatus = :emailStatus')
                    ->setParameter('emailStatus', $searchParam['emailStatus']);
        }

        return $query;
    }
    
    public function getResolvedSupports() {
        
        $qb = $this->createQueryBuilder('s')
                ->select('s')
                ->where('s.status = :status')
                ->setParameter('status', 'Resolved')
                ->andWhere('s.emailStatus = :emailStatus')
                ->setParameter('emailStatus', 'Active');
            
        $query = $qb->getQuery();
        
        return $query->getResult();
    }
    
    
    
}
